/*=========================================================================================================================
| I TOPIC IMPLEMENTATION PROVIDER
|
| Author:    Casey Margell, Ignia LLC (casey.margell@ignia.com)
| Client     Microsoft
| Project    AdCenter
|
| Purpose :  The ITopicImplementationProvider object defines an interface for implementation providers of the Topics system
|
>=========================================================================================================================
| Revisions  Date        Author          Comments
| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
|            03.23.09    Casey Margell   Initial version template
\------------------------------------------------------------------------------------------------------------------------*/

  using System;
  using System.Collections.Generic;
  using System.Data;
  using System.Configuration.Provider;

/*=========================================================================================================================
| NAMESPACE: IGNIA.TOPICS
>==========================================================================================================================
| Contains objects associated with the Ignia Topics
\------------------------------------------------------------------------------------------------------------------------*/
  namespace Ignia.Topics {

  /*=========================================================================================================================
  | CLASS: TOPIC MAPPING PROVIDER BASE
  >==========================================================================================================================
  | Defines a base class for topic mapping providers
  \------------------------------------------------------------------------------------------------------------------------*/
    public abstract class TopicMappingProviderBase : ProviderBase {

    /*=========================================================================================================================
    | PROPERTY: DATA PROVIDER
    >==========================================================================================================================
    | Upon setting the data provider we add this object as a listener to the events of that provider
    \------------------------------------------------------------------------------------------------------------------------*/
      public TopicDataProviderBase DataProvider {
        set {

        /*-----------------------------------------------------------------------------------------------------------------------
        | VALIDATE PARAMETERS
        \----------------------------------------------------------------------------------------------------------------------*/
          if (value == null) throw new ArgumentNullException("value");

        /*-----------------------------------------------------------------------------------------------------------------------
        | WIRE UP EVENTS
        \----------------------------------------------------------------------------------------------------------------------*/
          value.DeleteEvent += DeleteEventHandler;
          value.MoveEvent   += MoveEventHandler;
          value.RenameEvent += RenameEventHandler;

          }
        }

    /*=========================================================================================================================
    | METHOD: DELETE EVENT HANDLER
    >==========================================================================================================================
    | Abstranct definition of the DeleteEventHandler that inheriting objects must implement
    \------------------------------------------------------------------------------------------------------------------------*/
      public abstract void DeleteEventHandler(object sender, DeleteEventArgs args);

    /*=========================================================================================================================
    | METHOD: MOVE EVENT HANDLER
    >==========================================================================================================================
    | Abstranct definition of the MoveEventHandler that inheriting objects must implement
    \------------------------------------------------------------------------------------------------------------------------*/
      public abstract void MoveEventHandler(object sender, MoveEventArgs args);

    /*=========================================================================================================================
    | METHOD: RENAME EVENT HANDLER
    >==========================================================================================================================
    | Abstranct definition of the RenameEventHandler that inheriting objects must implement
    \------------------------------------------------------------------------------------------------------------------------*/
      public abstract void RenameEventHandler(object sender, RenameEventArgs args);
      }
    }
